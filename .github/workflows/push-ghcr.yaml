name: Build and Push

on:
  push:
    branches: [ master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Grant permission to create tags/releases
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history including tags

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@3d58c274f17dffee475a5520cbe67f0a882c4dbb
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out existing tags
        run: git fetch --tags

      - name: Get latest tag
        id: latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          echo "LATEST_TAG=${latest_tag}" >> $GITHUB_ENV
          echo "Latest Tag: ${latest_tag}"

      - name: Create new tag 
        id: create_tag
        if: startsWith(env.LATEST_TAG, 'v')
        run: |
          latest_tag=${{ env.LATEST_TAG }}
          major=${latest_tag:1:1}  # Get major version
          minor=${latest_tag:3:1}   # Get minor version
          patch=${latest_tag:5:1}   # Get patch version

          if [ "$patch" -lt 9 ]; then
            patch=$((patch + 1))
          else
            patch=0
            if [ "$minor" -lt 9 ]; then
              minor=$((minor + 1))
            else
              minor=0
              major=$((major + 1))
            fi
          fi

          new_tag="v$major.$minor.$patch"
          echo "New Docker tag: $new_tag"

          # Create and push new tag
          git tag "${new_tag}"
          git push origin "${new_tag}"

          echo "NEW_TAG=${new_tag}"
